apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ template "pnnlmiscscripts.pixiecore-full.fullname" . }}
  labels:
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: {{ template "pnnlmiscscripts.pixiecore-full.chart" . }}
    app: {{ template "pnnlmiscscripts.pixiecore-full.name" . }}
spec:
  selector:
    matchLabels:
      app: {{ template "pnnlmiscscripts.pixiecore-full.name" . }}
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ template "pnnlmiscscripts.pixiecore-full.name" . }}
    spec:
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: True
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      containers:
      - name: main
        image: {{ dict "dot" . "section" .Values.pixiecore | include "pnnlmiscscripts.pixiecore.image" }}
        imagePullPolicy: {{ .Values.pixiecore.imagePullPolicy }}
        securityContext:
          capabilities:
            add: ["NET_ADMIN"]
        command:
        - /bin/sh
        - -ec
        - |
{{- if .Values.listen.interface }}
          LISTENARG=-l;
          LISTENIP=$(ip a show dev {{ .Values.listen.interface }} | awk '{if($1 == "inet"){print $2}}' | sed 's@/.*@@');
{{- else if .Values.listen.ip }}
          LISTENARG=-l;
          LISTENIP={{ .Values.listen.ip }};
{{- else }}
          LISTENARG="";
          LISTENIP="";
{{- end }}
          exec pixiecore api --dhcp-no-bind $LISTENARG $LISTENIP --port {{ .Values.port | quote }} {{ .Values.extraArgs | join " " }} {{ .Values.upstreamURL | quote }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
